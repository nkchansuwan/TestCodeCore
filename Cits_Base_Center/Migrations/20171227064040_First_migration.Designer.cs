// <auto-generated />
using Cits_Base_Center;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Cits_Base_Center.Migrations
{
    [DbContext(typeof(Db))]
    [Migration("20171227064040_First_migration")]
    partial class First_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cits_Base_Center.MApps", b =>
                {
                    b.Property<string>("AppId")
                        .HasColumnName("APP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("AppCode")
                        .IsRequired()
                        .HasColumnName("APP_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("AppDomainName")
                        .IsRequired()
                        .HasColumnName("APP_DOMAIN_NAME")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("AppNameEn")
                        .IsRequired()
                        .HasColumnName("APP_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("AppNameTh")
                        .IsRequired()
                        .HasColumnName("APP_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("AppSkinCss")
                        .IsRequired()
                        .HasColumnName("APP_SKIN_CSS")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("AppId");

                    b.ToTable("M_APPs");
                });

            modelBuilder.Entity("Cits_Base_Center.MBankaccts", b =>
                {
                    b.Property<string>("BankacctId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BANKACCT_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnName("BANK_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BankacctCode")
                        .IsRequired()
                        .HasColumnName("BANKACCT_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BankacctNameEn")
                        .IsRequired()
                        .HasColumnName("BANKACCT_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BankacctNameTh")
                        .IsRequired()
                        .HasColumnName("BANKACCT_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BankacctNo")
                        .IsRequired()
                        .HasColumnName("BANKACCT_NO")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnName("BRANCH_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .HasColumnName("REFER_ID_1")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("(getdate())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BankacctId");

                    b.ToTable("M_BANKACCTs");
                });

            modelBuilder.Entity("Cits_Base_Center.MBanks", b =>
                {
                    b.Property<string>("BankId")
                        .HasColumnName("BANK_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BankBotcode")
                        .IsRequired()
                        .HasColumnName("BANK_BOTCODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BankCode")
                        .IsRequired()
                        .HasColumnName("BANK_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BankColorRgb")
                        .IsRequired()
                        .HasColumnName("BANK_COLOR_RGB")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BankNameEn")
                        .IsRequired()
                        .HasColumnName("BANK_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BankNameTh")
                        .IsRequired()
                        .HasColumnName("BANK_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("TextColorRgb")
                        .IsRequired()
                        .HasColumnName("TEXT_COLOR_RGB")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("BankId");

                    b.ToTable("M_BANKs");
                });

            modelBuilder.Entity("Cits_Base_Center.MBillStatus", b =>
                {
                    b.Property<int>("BillStatusId")
                        .HasColumnName("BILL_STATUS_ID");

                    b.Property<string>("BillStatusName")
                        .IsRequired()
                        .HasColumnName("BILL_STATUS_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<int?>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("BillStatusId");

                    b.ToTable("M_BILL_STATUS");
                });

            modelBuilder.Entity("Cits_Base_Center.MBooks", b =>
                {
                    b.Property<string>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BOOK_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BookCode")
                        .IsRequired()
                        .HasColumnName("BOOK_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BookNameEn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BOOK_NAME_EN")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BookNameTh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BOOK_NAME_TH")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnName("BRANCH_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FormPrintId01")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_01")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId02")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_02")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId03")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_03")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId04")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_04")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId05")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_05")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId06")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_06")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId07")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_07")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId08")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_08")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId09")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_09")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintId10")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID_10")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ReftypeId")
                        .IsRequired()
                        .HasColumnName("REFTYPE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("BookId");

                    b.ToTable("M_BOOKs");
                });

            modelBuilder.Entity("Cits_Base_Center.MBranchs", b =>
                {
                    b.Property<string>("BranchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BRANCH_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("BranchAddressTh1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BRANCH_ADDRESS_TH_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("BranchAddressTh2")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BRANCH_ADDRESS_TH_2")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("BranchAddressTh3")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BRANCH_ADDRESS_TH_3")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnName("BRANCH_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BranchFaxNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BRANCH_FAX_NO")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BranchNameEn")
                        .IsRequired()
                        .HasColumnName("BRANCH_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BranchNameTh")
                        .IsRequired()
                        .HasColumnName("BRANCH_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BranchTelNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BRANCH_TEL_NO")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Vatbranchcode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VATBRANCHCODE")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("Vatisout")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VATISOUT")
                        .HasDefaultValueSql("((1))");

                    b.Property<int?>("VattypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VATTYPE_ID")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("BranchId");

                    b.ToTable("M_BRANCHs");
                });

            modelBuilder.Entity("Cits_Base_Center.MChargeTypes", b =>
                {
                    b.Property<int>("ChargeTypeId")
                        .HasColumnName("CHARGE_TYPE_ID");

                    b.Property<string>("ChargeTypeNameEn")
                        .IsRequired()
                        .HasColumnName("CHARGE_TYPE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ChargeTypeNameTh")
                        .IsRequired()
                        .HasColumnName("CHARGE_TYPE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ChargeTypeId");

                    b.ToTable("M_CHARGE_TYPEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MCimRoleTypes", b =>
                {
                    b.Property<int>("RoleTypeId")
                        .HasColumnName("ROLE_TYPE_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STAT")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("RoleTypeNameEn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ROLE_TYPE_NAME_EN")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("RoleTypeNameTh")
                        .IsRequired()
                        .HasColumnName("ROLE_TYPE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("RoleTypeId");

                    b.ToTable("M_CIM_ROLE_TYPEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MCorps", b =>
                {
                    b.Property<string>("CorpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CORP_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<string>("CorpCode")
                        .IsRequired()
                        .HasColumnName("CORP_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpNameEn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CORP_NAME_EN")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("CorpNameTh")
                        .IsRequired()
                        .HasColumnName("CORP_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("CorpTaxId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CORP_TAX_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CurrencyId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CURRENCY_ID")
                        .HasDefaultValueSql("('THB')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CorpId");

                    b.ToTable("M_CORPs");
                });

            modelBuilder.Entity("Cits_Base_Center.MCurrencys", b =>
                {
                    b.Property<string>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CURRENCY_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CurrencyNameEn")
                        .IsRequired()
                        .HasColumnName("CURRENCY_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("CurrencyNameTh")
                        .IsRequired()
                        .HasColumnName("CURRENCY_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("CurrencyId");

                    b.ToTable("M_CURRENCYs");
                });

            modelBuilder.Entity("Cits_Base_Center.MCustomers", b =>
                {
                    b.Property<string>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CUSTOMER_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime?>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("AddressTh1")
                        .HasColumnName("ADDRESS_TH_1")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("AddressTh2")
                        .HasColumnName("ADDRESS_TH_2")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("AddressTh3")
                        .HasColumnName("ADDRESS_TH_3")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnName("CUSTOMER_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CustomerNameEn")
                        .IsRequired()
                        .HasColumnName("CUSTOMER_NAME_EN")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CustomerNameTh")
                        .IsRequired()
                        .HasColumnName("CUSTOMER_NAME_TH")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int?>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FaxNo")
                        .HasColumnName("FAX_NO")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Iscust")
                        .HasColumnName("ISCUST");

                    b.Property<int>("Issupp")
                        .HasColumnName("ISSUPP");

                    b.Property<string>("ReferId1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("TaxId")
                        .HasColumnName("TAX_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("TelNo")
                        .HasColumnName("TEL_NO")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("Vatbranchcode")
                        .HasColumnName("VATBRANCHCODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Vatbranchname")
                        .HasColumnName("VATBRANCHNAME")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Zip")
                        .HasColumnName("ZIP")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("CustomerId");

                    b.ToTable("M_CUSTOMERs");
                });

            modelBuilder.Entity("Cits_Base_Center.MDepts", b =>
                {
                    b.Property<string>("DeptId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DEPT_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnName("DEPT_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("DeptNameEn")
                        .IsRequired()
                        .HasColumnName("DEPT_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("DeptNameTh")
                        .IsRequired()
                        .HasColumnName("DEPT_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("DeptId");

                    b.ToTable("M_DEPTs");
                });

            modelBuilder.Entity("Cits_Base_Center.MFormPrints", b =>
                {
                    b.Property<string>("FormPrintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Barcode1SqlStringFile")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BARCODE_1_SQL_STRING_FILE")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CORP_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FormPrintCode")
                        .IsRequired()
                        .HasColumnName("FORM_PRINT_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintNameEn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_NAME_EN")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("FormPrintNameTh")
                        .IsRequired()
                        .HasColumnName("FORM_PRINT_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("PaperlessReportId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAPERLESS_REPORT_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("FormPrintId");

                    b.ToTable("M_FORM_PRINTs");
                });

            modelBuilder.Entity("Cits_Base_Center.MInvoiceStatus", b =>
                {
                    b.Property<int>("InvoiceStatusId")
                        .HasColumnName("INVOICE_STATUS_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("InvoiceStatusNameEn")
                        .IsRequired()
                        .HasColumnName("INVOICE_STATUS_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("InvoiceStatusNameTh")
                        .IsRequired()
                        .HasColumnName("INVOICE_STATUS_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("InvoiceStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("INVOICE_STATUS_TYPE")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("InvoiceStatusId");

                    b.ToTable("M_INVOICE_STATUS");
                });

            modelBuilder.Entity("Cits_Base_Center.MJobs", b =>
                {
                    b.Property<string>("JobId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("JOB_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("JobCode")
                        .IsRequired()
                        .HasColumnName("JOB_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("JobNameEn")
                        .IsRequired()
                        .HasColumnName("JOB_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("JobNameTh")
                        .IsRequired()
                        .HasColumnName("JOB_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ProjId")
                        .IsRequired()
                        .HasColumnName("PROJ_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("JobId");

                    b.ToTable("M_JOBs");
                });

            modelBuilder.Entity("Cits_Base_Center.MMailTypes", b =>
                {
                    b.Property<int>("MailTypeId")
                        .HasColumnName("MAIL_TYPE_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("MailTypeName")
                        .HasColumnName("MAIL_TYPE_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("MailTypeSubject")
                        .HasColumnName("MAIL_TYPE_SUBJECT")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int?>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("MailTypeId");

                    b.ToTable("M_MAIL_TYPEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MMenus", b =>
                {
                    b.Property<string>("MenuId")
                        .HasColumnName("MENU_ID")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MenuCode")
                        .HasColumnName("MENU_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("MenuGroup")
                        .HasColumnName("MENU_GROUP");

                    b.Property<string>("MenuName")
                        .HasColumnName("MENU_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int?>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(36)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("MenuId");

                    b.ToTable("M_MENUs");
                });

            modelBuilder.Entity("Cits_Base_Center.MPackingItems", b =>
                {
                    b.Property<string>("PackingItemId")
                        .HasColumnName("PACKING_ITEM_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("PackingItemCode")
                        .IsRequired()
                        .HasColumnName("PACKING_ITEM_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PackingItemDescription")
                        .IsRequired()
                        .HasColumnName("PACKING_ITEM_DESCRIPTION")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("PackingItemName")
                        .IsRequired()
                        .HasColumnName("PACKING_ITEM_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UmNameQty1")
                        .IsRequired()
                        .HasColumnName("UM_NAME_QTY1")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("UmNameQty2")
                        .IsRequired()
                        .HasColumnName("UM_NAME_QTY2")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("UmNameQty3")
                        .IsRequired()
                        .HasColumnName("UM_NAME_QTY3")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("PackingItemId");

                    b.ToTable("M_PACKING_ITEMs");
                });

            modelBuilder.Entity("Cits_Base_Center.MPaybatchStatus", b =>
                {
                    b.Property<int>("PaybatchStatusId")
                        .HasColumnName("PAYBATCH_STATUS_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PaybatchStatusNameEn")
                        .IsRequired()
                        .HasColumnName("PAYBATCH_STATUS_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("PaybatchStatusNameTh")
                        .IsRequired()
                        .HasColumnName("PAYBATCH_STATUS_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("PaybatchStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAYBATCH_STATUS_TYPE")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PaybatchStatusId");

                    b.ToTable("M_PAYBATCH_STATUS");
                });

            modelBuilder.Entity("Cits_Base_Center.MPayInStatus", b =>
                {
                    b.Property<int>("PayInStatusId")
                        .HasColumnName("PAY_IN_STATUS_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("PayInStatusName")
                        .IsRequired()
                        .HasColumnName("PAY_IN_STATUS_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("PayInStatusId");

                    b.ToTable("M_PAY_IN_STATUS");
                });

            modelBuilder.Entity("Cits_Base_Center.MPaymentbatchStatus", b =>
                {
                    b.Property<int>("PaymentbatchStatusId")
                        .HasColumnName("PAYMENTBATCH_STATUS_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PaymentbatchStatusNameEn")
                        .IsRequired()
                        .HasColumnName("PAYMENTBATCH_STATUS_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("PaymentbatchStatusNameTh")
                        .IsRequired()
                        .HasColumnName("PAYMENTBATCH_STATUS_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("PaymentbatchStatusType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PAYMENTBATCH_STATUS_TYPE")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("PaymentbatchStatusId");

                    b.ToTable("M_PAYMENTBATCH_STATUS");
                });

            modelBuilder.Entity("Cits_Base_Center.MPdbrands", b =>
                {
                    b.Property<string>("PdbrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PDBRAND_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PdbrandCode")
                        .IsRequired()
                        .HasColumnName("PDBRAND_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PdbrandNameEn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PDBRAND_NAME_EN")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("PdbrandNameTh")
                        .IsRequired()
                        .HasColumnName("PDBRAND_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.HasKey("PdbrandId");

                    b.ToTable("M_PDBRANDs");
                });

            modelBuilder.Entity("Cits_Base_Center.MPdcolors", b =>
                {
                    b.Property<string>("PdcolorId")
                        .HasColumnName("PDCOLOR_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .HasColumnName("ACTIVE_STATUS");

                    b.Property<DateTime>("ActiveStatusDate")
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("PdcolorCode")
                        .IsRequired()
                        .HasColumnName("PDCOLOR_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PdcolorNameEn")
                        .IsRequired()
                        .HasColumnName("PDCOLOR_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("PdcolorNameTh")
                        .IsRequired()
                        .HasColumnName("PDCOLOR_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("PdcolorId");

                    b.ToTable("M_PDCOLORs");
                });

            modelBuilder.Entity("Cits_Base_Center.MPdmodels", b =>
                {
                    b.Property<string>("PdmodelId")
                        .HasColumnName("PDMODEL_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .HasColumnName("ACTIVE_STATUS");

                    b.Property<DateTime>("ActiveStatusDate")
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("PdmodelCode")
                        .IsRequired()
                        .HasColumnName("PDMODEL_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PdmodelNameEn")
                        .IsRequired()
                        .HasColumnName("PDMODEL_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("PdmodelNameTh")
                        .IsRequired()
                        .HasColumnName("PDMODEL_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("PdmodelId");

                    b.ToTable("M_PDMODELs");
                });

            modelBuilder.Entity("Cits_Base_Center.MPdsizes", b =>
                {
                    b.Property<string>("PdsizeId")
                        .HasColumnName("PDSIZE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .HasColumnName("ACTIVE_STATUS");

                    b.Property<DateTime>("ActiveStatusDate")
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("PdsizeCode")
                        .IsRequired()
                        .HasColumnName("PDSIZE_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PdsizeNameEn")
                        .IsRequired()
                        .HasColumnName("PDSIZE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("PdsizeNameTh")
                        .IsRequired()
                        .HasColumnName("PDSIZE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("PdsizeId");

                    b.ToTable("M_PDSIZEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MProducts", b =>
                {
                    b.Property<string>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRODUCT_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PdbrandId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PDBRAND_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PdcolorId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PDCOLOR_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PdmodelId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PDMODEL_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("PdsizeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PDSIZE_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnName("PRODUCT_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ProductNameEn")
                        .IsRequired()
                        .HasColumnName("PRODUCT_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ProductNameTh")
                        .IsRequired()
                        .HasColumnName("PRODUCT_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ProductSnameEn")
                        .IsRequired()
                        .HasColumnName("PRODUCT_SNAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ProductSnameTh")
                        .IsRequired()
                        .HasColumnName("PRODUCT_SNAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UmName")
                        .IsRequired()
                        .HasColumnName("UM_NAME")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UmNameSales")
                        .IsRequired()
                        .HasColumnName("UM_NAME_SALES")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<decimal>("UmqtySales")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UMQTY_SALES")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((1))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.HasKey("ProductId");

                    b.ToTable("M_PRODUCTs");
                });

            modelBuilder.Entity("Cits_Base_Center.MProjs", b =>
                {
                    b.Property<string>("ProjId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PROJ_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ActiveStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ProjCode")
                        .IsRequired()
                        .HasColumnName("PROJ_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ProjNameEn")
                        .IsRequired()
                        .HasColumnName("PROJ_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ProjNameTh")
                        .IsRequired()
                        .HasColumnName("PROJ_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ProjId");

                    b.ToTable("M_PROJs");
                });

            modelBuilder.Entity("Cits_Base_Center.MReftype", b =>
                {
                    b.Property<string>("ReftypeId")
                        .HasColumnName("REFTYPE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReftypeGroup")
                        .IsRequired()
                        .HasColumnName("REFTYPE_GROUP")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ReftypeNameEn")
                        .IsRequired()
                        .HasColumnName("REFTYPE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ReftypeNameTh")
                        .IsRequired()
                        .HasColumnName("REFTYPE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.HasKey("ReftypeId");

                    b.ToTable("M_REFTYPE");
                });

            modelBuilder.Entity("Cits_Base_Center.MRemarkKeys", b =>
                {
                    b.Property<string>("RemarkKeyId")
                        .HasColumnName("REMARK_KEY_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("RemarkKeyId");

                    b.ToTable("M_REMARK_KEYs");
                });

            modelBuilder.Entity("Cits_Base_Center.MRoles", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnName("ROLE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnName("ROLE_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnName("ROLE_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("RoleId");

                    b.ToTable("M_ROLEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MSalesreps", b =>
                {
                    b.Property<string>("SalesrepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SALESREP_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SalesrepCode")
                        .IsRequired()
                        .HasColumnName("SALESREP_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("SalesrepNameEn")
                        .IsRequired()
                        .HasColumnName("SALESREP_NAME_EN")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SalesrepNameTh")
                        .IsRequired()
                        .HasColumnName("SALESREP_NAME_TH")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SaleszoneId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SALESZONE_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SalesrepId");

                    b.ToTable("M_SALESREPs");
                });

            modelBuilder.Entity("Cits_Base_Center.MSaleszones", b =>
                {
                    b.Property<string>("SaleszoneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SALESZONE_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SaleszoneCode")
                        .IsRequired()
                        .HasColumnName("SALESZONE_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("SaleszoneNameEn")
                        .IsRequired()
                        .HasColumnName("SALESZONE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("SaleszoneNameTh")
                        .IsRequired()
                        .HasColumnName("SALESZONE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SaleszoneId");

                    b.ToTable("M_SALESZONEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MSects", b =>
                {
                    b.Property<string>("SectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SECT_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("DeptId")
                        .IsRequired()
                        .HasColumnName("DEPT_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SectCode")
                        .IsRequired()
                        .HasColumnName("SECT_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("SectNameEn")
                        .IsRequired()
                        .HasColumnName("SECT_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("SectNameTh")
                        .IsRequired()
                        .HasColumnName("SECT_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.HasKey("SectId");

                    b.ToTable("M_SECTs");
                });

            modelBuilder.Entity("Cits_Base_Center.MSentMailConf", b =>
                {
                    b.Property<string>("SentMailConfId")
                        .HasColumnName("SENT_MAIL_CONF_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("MailTypeId")
                        .HasColumnName("MAIL_TYPE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("SentMailConfId");

                    b.ToTable("M_SENT_MAIL_CONF");
                });

            modelBuilder.Entity("Cits_Base_Center.MServiceTypes", b =>
                {
                    b.Property<int>("ServiceTypeId")
                        .HasColumnName("SERVICE_TYPE_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ServiceTypeNameEn")
                        .IsRequired()
                        .HasColumnName("SERVICE_TYPE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ServiceTypeNameTh")
                        .IsRequired()
                        .HasColumnName("SERVICE_TYPE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("ServiceTypeId");

                    b.ToTable("M_SERVICE_TYPEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MSites", b =>
                {
                    b.Property<string>("SiteId")
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteCode")
                        .IsRequired()
                        .HasColumnName("SITE_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("SiteDomainName")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SITE_DOMAIN_NAME")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnName("SITE_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("SiteSkinCss")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SITE_SKIN_CSS")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(120)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("SiteId");

                    b.ToTable("M_SITEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MUsers", b =>
                {
                    b.Property<string>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("USER_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CURRENCY_ID")
                        .HasDefaultValueSql("('THB')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnName("DISPLAY_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("FirebaseId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FIREBASE_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("MfaCreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MFA_CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(((1900)-(1))-(1))");

                    b.Property<string>("MfaKey")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MFA_KEY")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("MfaStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MFA_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ROLE_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("UserId");

                    b.ToTable("M_USERs");
                });

            modelBuilder.Entity("Cits_Base_Center.MVattype", b =>
                {
                    b.Property<int>("VattypeId")
                        .HasColumnName("VATTYPE_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("VatNameEn")
                        .HasColumnName("VAT_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("VatNameTh")
                        .HasColumnName("VAT_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<decimal>("VatRate")
                        .HasColumnName("VAT_RATE")
                        .HasColumnType("decimal(16, 4)");

                    b.HasKey("VattypeId");

                    b.ToTable("M_VATTYPE");
                });

            modelBuilder.Entity("Cits_Base_Center.MVendors", b =>
                {
                    b.Property<string>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VENDOR_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("APPROVED_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("AttentionMessage")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ATTENTION_MESSAGE")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("AttentionTo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ATTENTION_TO")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BankAccountNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BANK_ACCOUNT_NO")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<int>("BankAccountNoStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BANK_ACCOUNT_NO_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("BankBranchCode")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BANK_BRANCH_CODE")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("BankId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BANK_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ChargeTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CHARGE_TYPE_ID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CORP_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Email")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("EMAIL")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("FaxNo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FAX_NO")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REFER_ID_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ServiceTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SERVICE_TYPE_ID")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SITE_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("TaxId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TAX_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<decimal>("TransferLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TRANSFER_LIMIT")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0.00))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("VendorCode")
                        .IsRequired()
                        .HasColumnName("VENDOR_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("VendorNameEn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VENDOR_NAME_EN")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("VendorNameTh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VENDOR_NAME_TH")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<int>("WhtDeliveryTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_DELIVERY_TYPE_ID")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("WhtIncomeTypeId1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_INCOME_TYPE_ID_1")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("WhtIncomeTypeId2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_INCOME_TYPE_ID_2")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("WhtIncomeTypeId3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_INCOME_TYPE_ID_3")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("WhtRate1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_RATE_1")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("WhtRate2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_RATE_2")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("WhtRate3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_RATE_3")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("WhtTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_TYPE_ID")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("VendorId");

                    b.HasIndex("CorpId");

                    b.ToTable("M_VENDORs");
                });

            modelBuilder.Entity("Cits_Base_Center.MWhouses", b =>
                {
                    b.Property<string>("WhouseId")
                        .HasColumnName("WHOUSE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnName("BRANCH_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("ReferId1")
                        .IsRequired()
                        .HasColumnName("REFER_ID_1")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("WhouseCode")
                        .IsRequired()
                        .HasColumnName("WHOUSE_CODE")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("WhouseName")
                        .IsRequired()
                        .HasColumnName("WHOUSE_NAME")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.HasKey("WhouseId");

                    b.ToTable("M_WHOUSEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MWhtDeliveryTypes", b =>
                {
                    b.Property<int>("WhtDeliveryTypeId")
                        .HasColumnName("WHT_DELIVERY_TYPE_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WhtDeliveryTypeNameEn")
                        .IsRequired()
                        .HasColumnName("WHT_DELIVERY_TYPE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("WhtDeliveryTypeNameTh")
                        .IsRequired()
                        .HasColumnName("WHT_DELIVERY_TYPE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.HasKey("WhtDeliveryTypeId");

                    b.ToTable("M_WHT_DELIVERY_TYPEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MWhtIncomeTypes", b =>
                {
                    b.Property<int>("WhtIncomeTypeId")
                        .HasColumnName("WHT_INCOME_TYPE_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WhtIncomeTypeNameEn")
                        .IsRequired()
                        .HasColumnName("WHT_INCOME_TYPE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("WhtIncomeTypeNameTh")
                        .IsRequired()
                        .HasColumnName("WHT_INCOME_TYPE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<decimal>("WhtRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_RATE")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("WhtIncomeTypeId");

                    b.ToTable("M_WHT_INCOME_TYPEs");
                });

            modelBuilder.Entity("Cits_Base_Center.MWhtTypes", b =>
                {
                    b.Property<int>("WhtTypeId")
                        .HasColumnName("WHT_TYPE_ID");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("WhtGroupType")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_GROUP_TYPE")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("WhtIncomeTypeId1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_INCOME_TYPE_ID_1")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("WhtIncomeTypeId2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_INCOME_TYPE_ID_2")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("WhtIncomeTypeId3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_INCOME_TYPE_ID_3")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("WhtRate1")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_RATE_1")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("WhtRate2")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_RATE_2")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("WhtRate3")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WHT_RATE_3")
                        .HasColumnType("decimal(16, 4)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("WhtTypeNameEn")
                        .IsRequired()
                        .HasColumnName("WHT_TYPE_NAME_EN")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("WhtTypeNameTh")
                        .IsRequired()
                        .HasColumnName("WHT_TYPE_NAME_TH")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.HasKey("WhtTypeId");

                    b.ToTable("M_WHT_TYPEs");
                });

            modelBuilder.Entity("Cits_Base_Center.RRoleMenus", b =>
                {
                    b.Property<string>("RoleMenuId")
                        .HasColumnName("ROLE_MENU_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("CanAdd")
                        .HasColumnName("CAN_ADD");

                    b.Property<int>("CanDelete")
                        .HasColumnName("CAN_DELETE");

                    b.Property<int>("CanEdit")
                        .HasColumnName("CAN_EDIT");

                    b.Property<int>("CanView")
                        .HasColumnName("CAN_VIEW");

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("MenuId")
                        .IsRequired()
                        .HasColumnName("MENU_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnName("ROLE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("SiteId")
                        .IsRequired()
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.HasKey("RoleMenuId");

                    b.ToTable("R_ROLE_MENUs");
                });

            modelBuilder.Entity("Cits_Base_Center.TActionLogs", b =>
                {
                    b.Property<string>("ActionLogId")
                        .HasColumnName("ACTION_LOG_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnName("ACTION")
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("MenuId")
                        .HasColumnName("MENU_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("USER_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("ActionLogId");

                    b.ToTable("T_ACTION_LOGs");
                });

            modelBuilder.Entity("Cits_Base_Center.TCorpUsers", b =>
                {
                    b.Property<string>("CorpUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CORP_USER_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("ActiveStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS")
                        .HasDefaultValueSql("((1))");

                    b.Property<DateTime>("ActiveStatusDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ACTIVE_STATUS_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("CorpId")
                        .IsRequired()
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("END_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("START_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('19000101')");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("USER_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("CorpUserId");

                    b.HasIndex("CorpId");

                    b.HasIndex("UserId");

                    b.ToTable("T_CORP_USERs");
                });

            modelBuilder.Entity("Cits_Base_Center.TCustomerUpdateLogs", b =>
                {
                    b.Property<string>("CustomerUpdateLogId")
                        .HasColumnName("CUSTOMER_UPDATE_LOG_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("NewData")
                        .HasColumnName("NEW_DATA")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("OldData")
                        .HasColumnName("OLD_DATA")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<int?>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<string>("SiteId")
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("UpdateField")
                        .HasColumnName("UPDATE_FIELD")
                        .HasMaxLength(125)
                        .IsUnicode(false);

                    b.Property<string>("UserId")
                        .HasColumnName("USER_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("CustomerUpdateLogId");

                    b.ToTable("T_CUSTOMER_UPDATE_LOGs");
                });

            modelBuilder.Entity("Cits_Base_Center.TPrintLogs", b =>
                {
                    b.Property<string>("PrintLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PRINT_LOG_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("AppId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("APP_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Barcode1")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BARCODE_1")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("FormPrintId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FORM_PRINT_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("MasterId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MASTER_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int>("NumberOfPrinting")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("NUMBER_OF_PRINTING")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("TotalamtTextEn")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TOTALAMT_TEXT_EN")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("TotalamtTextTh")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TOTALAMT_TEXT_TH")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_BY")
                        .HasDefaultValueSql("('SYSTEM')")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnName("USER_ID")
                        .HasDefaultValueSql("((0))")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("PrintLogId");

                    b.ToTable("T_PRINT_LOGs");
                });

            modelBuilder.Entity("Cits_Base_Center.TSentMailLogs", b =>
                {
                    b.Property<string>("SentMailLogId")
                        .HasColumnName("SENT_MAIL_LOG_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<int?>("DeleteStatus")
                        .HasColumnName("DELETE_STATUS");

                    b.Property<string>("Description")
                        .HasColumnName("DESCRIPTION")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int?>("ExpireStatus")
                        .HasColumnName("EXPIRE_STATUS");

                    b.Property<int?>("MailTypeId")
                        .HasColumnName("MAIL_TYPE_ID");

                    b.Property<int?>("Revision")
                        .HasColumnName("REVISION");

                    b.Property<DateTime?>("SentDate")
                        .HasColumnName("SENT_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("SiteId")
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasColumnName("USER_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("SentMailLogId");

                    b.ToTable("T_SENT_MAIL_LOGs");
                });

            modelBuilder.Entity("Cits_Base_Center.TStock", b =>
                {
                    b.Property<string>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("STOCK_ID")
                        .HasDefaultValueSql("(newid())")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("BranchId")
                        .HasColumnName("BRANCH_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CorpId")
                        .HasColumnName("CORP_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("CreateBy")
                        .HasColumnName("CREATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CREATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("DeleteStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("DELETE_STATUS")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("ItemId")
                        .HasColumnName("ITEM_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("Lot")
                        .HasColumnName("LOT")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<decimal?>("Qty")
                        .HasColumnName("QTY")
                        .HasColumnType("decimal(16, 4)");

                    b.Property<string>("ReferId1")
                        .HasColumnName("REFER_ID_1")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<int?>("Revision")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("REVISION")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("SiteId")
                        .HasColumnName("SITE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<string>("UpdateBy")
                        .HasColumnName("UPDATE_BY")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.Property<DateTime?>("UpdateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("UPDATE_DATE")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("WhouseId")
                        .HasColumnName("WHOUSE_ID")
                        .HasMaxLength(40)
                        .IsUnicode(false);

                    b.HasKey("StockId");

                    b.ToTable("T_STOCK");
                });

            modelBuilder.Entity("Cits_Base_Center.MVendors", b =>
                {
                    b.HasOne("Cits_Base_Center.MCorps")
                        .WithMany("MVendors")
                        .HasForeignKey("CorpId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Cits_Base_Center.TCorpUsers", b =>
                {
                    b.HasOne("Cits_Base_Center.MCorps", "MCorps")
                        .WithMany("TCorpUsers")
                        .HasForeignKey("CorpId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Cits_Base_Center.MUsers", "MUsers")
                        .WithMany("TCorpUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
